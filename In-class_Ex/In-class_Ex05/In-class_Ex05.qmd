---
title: "In-class Exercise 5: Global and Local Measures of Spatial Autocorrelation: sfdep methods"
author: "Jeffrey Lee Shao Lin"
date: "September 23, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
  warning: false
---

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse)
```

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```
```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012) %>%
  select(1:4, 7, 15)
```

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") +
  tm_borders(col = "grey") +
  tm_layout(main.title = "Distribution of GDP per capita by country, Hunan Province",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE)
```

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1)
```

```{r}

moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
glimpse(moranI)
```

```{r}

global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

```{r}

set.seed(1234)
```

```{r}

global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim = 99)
```

```{r}
lisa <- wm_q %>%
  mutate(local_moran = local_moran(
    GDPPC, nb, wt, nsim = 99),
    .before = 1) %>%
  unnest(local_moran)
```


```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("ii") +
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(
    main.title = "local Moran's I of GDPPC",
    main.title.size = 2)
```

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("p_ii_sim") +
  tm_borders(alpha = 0.5) +
  tm_layout(
    main.title = "p-values of local Moran's I",
    main.title.size = 2)
```

```{r}
tmap_mode("plot")
map1 <- tm_shape(lisa) + 
  tm_fill("ii")+
  tm_borders(alpha=0.5)+
  tm_layout(main.title="p-value",
            main.title.size=2)

tmap_mode("plot")
map2 <- tm_shape(lisa) + 
  tm_fill("p_ii_sim")+
  tm_borders(alpha=0.5)+
  tm_layout(main.title="p-value",
            main.title.size=2)

tmap_arrange(map1, 
             map2, 
             asp=1, #Aspect Ratio
             ncol=2)
```

```{r}
lisa_sig <- lisa %>%
  filter(p_ii < 0.05) #filter only significant p values

tmap_mode("plot")
tm_shape(lisa)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
tm_shape(lisa_sig)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)

```


```{r}
wm_idw <- hunan_GDPPC %>% 
  mutate(nb = st_contiguity(geometry) ,
         wts = st_inverse_distance(nb, geometry,
                                  scale = 1,
                                  alpha =1),
         .before = 1)
```

```{r}
HCSA <- wm_idw %>% 
  mutate(local_Gi = local_gstar_perm(
    GDPPC, nb, wt, nsim = 99),
    .before = 1) %>% 
  unnest(local_Gi)
HCSA

```

```{r}
tmap_mode("plot")
tm_shape(HCSA)+
  tm_fill("gi_star")+
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8))
```

```{r}

#| eval: false
HCSA_sig <- HCSA %>% 
  filter(p_sim < 0.05)
tmap_mode("plot")
tm_shape(HCSA) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
tm_shape(HCSA_sig) +
  tm_fill("cluster") +
  tm_borders(alpha = 0.4)
```